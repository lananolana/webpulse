// Code generated by mockery v2.45.0. DO NOT EDIT.

package handlers

import (
	context "context"

	dto "github.com/lananolana/webpulse/backend/internal/dto"

	mock "github.com/stretchr/testify/mock"
)

// MockSiteClient is an autogenerated mock type for the SiteClient type
type MockSiteClient struct {
	mock.Mock
}

// GetServiceStats provides a mock function with given fields: ctx, wantedServiceDomain
func (_m *MockSiteClient) GetServiceStats(ctx context.Context, wantedServiceDomain string) dto.ServiceStatsResponse {
	ret := _m.Called(ctx, wantedServiceDomain)

	if len(ret) == 0 {
		panic("no return value specified for GetServiceStats")
	}

	var r0 dto.ServiceStatsResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) dto.ServiceStatsResponse); ok {
		r0 = rf(ctx, wantedServiceDomain)
	} else {
		r0 = ret.Get(0).(dto.ServiceStatsResponse)
	}

	return r0
}

// NewMockSiteClient creates a new instance of MockSiteClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSiteClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSiteClient {
	mock := &MockSiteClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
